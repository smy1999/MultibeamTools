import pandas as pd
from ConversionToolbox import MBlist as mbl
from matplotlib import pyplot as plt
"""
Plot single ping backscatter angular response curve.
User can choose any ping by specifying the ping time.
"""


def plot_curve(file_name, formats, times):
    tags = [mbl.FORMAT[tag] for tag in formats]
    df = _read_xlsx(file_name, tags)
    dir = _create_dir(df)
    _plot(dir, times)


def _read_xlsx(file_name, tags):
    df = pd.read_excel(file_name, engine='openpyxl')
    df = df[tags]
    return df


def _create_dir(df):
    dir = {}
    tags = [mbl.FORMAT[tag] for tag in ['G', 'g', 'B']]
    for i in range(df.shape[0]):
        t = df[mbl.FORMAT['T']][i]
        data = (df[tags[0]][i], df[tags[1]][i], df[tags[2]][i])
        if t not in dir:
            dir[t] = []
        dir[t].append(data)
    print(dir.keys())
    return dir


def _plot(dir, times):
    for time in times:
        if time in dir:
            x = [data for _, data, _ in dir[time]]
            y = [data for _, _, data in dir[time]]
            z = zip(x, y)
            z = sorted(z)
            x, y = zip(*z)
            plt.plot(x, y)
            plt.xlabel('Incident Angle(Â°)')
            plt.ylabel('Backscatter(dB)')
    plt.show()


if __name__ == '__main__':
    file = '../PlotToolbox/0158mblist.xlsx'
    input_format = ['T', 'G', 'g', 'B']
    times = ['2016/08/30/02/58/55.001000', '2016/08/30/02/59/4.203000', '2016/08/30/02/59/13.418000', '2016/08/30/02/59/22.749000', '2016/08/30/02/59/32.147000', '2016/08/30/02/59/41.573000', '2016/08/30/02/59/51.019000', '2016/08/30/03/00/0.479000', '2016/08/30/03/00/9.941000', '2016/08/30/03/00/10.117000', '2016/08/30/03/00/19.700000', '2016/08/30/03/00/19.876000', '2016/08/30/03/00/29.391000', '2016/08/30/03/00/29.567000', '2016/08/30/03/00/38.377000', '2016/08/30/03/00/38.553000', '2016/08/30/03/00/47.132000', '2016/08/30/03/00/47.308000', '2016/08/30/03/00/55.752000', '2016/08/30/03/00/55.928000', '2016/08/30/03/01/4.324000', '2016/08/30/03/01/4.500000', '2016/08/30/03/01/12.917000', '2016/08/30/03/01/13.093000', '2016/08/30/03/01/21.686000', '2016/08/30/03/01/21.862000', '2016/08/30/03/01/30.631000', '2016/08/30/03/01/30.807000', '2016/08/30/03/01/39.827000', '2016/08/30/03/01/40.003000', '2016/08/30/03/01/49.301000', '2016/08/30/03/01/49.477000', '2016/08/30/03/01/58.985000', '2016/08/30/03/01/59.161000', '2016/08/30/03/02/8.866000', '2016/08/30/03/02/9.042000', '2016/08/30/03/02/18.645000', '2016/08/30/03/02/18.821000', '2016/08/30/03/02/28.336000', '2016/08/30/03/02/28.512000', '2016/08/30/03/02/37.972000', '2016/08/30/03/02/38.148000', '2016/08/30/03/02/47.500000', '2016/08/30/03/02/47.676000', '2016/08/30/03/02/56.778000', '2016/08/30/03/02/56.954000', '2016/08/30/03/03/5.988000', '2016/08/30/03/03/6.164000', '2016/08/30/03/03/15.082000', '2016/08/30/03/03/15.258000', '2016/08/30/03/03/24.190000', '2016/08/30/03/03/24.366000', '2016/08/30/03/03/33.528000', '2016/08/30/03/03/33.704000', '2016/08/30/03/03/42.914000', '2016/08/30/03/03/43.090000', '2016/08/30/03/03/52.232000', '2016/08/30/03/03/52.408000', '2016/08/30/03/04/1.496000', '2016/08/30/03/04/1.672000', '2016/08/30/03/04/10.712000', '2016/08/30/03/04/10.888000', '2016/08/30/03/04/19.956000', '2016/08/30/03/04/20.132000', '2016/08/30/03/04/29.057000', '2016/08/30/03/04/29.233000']
    plot_curve(file, input_format, times)
